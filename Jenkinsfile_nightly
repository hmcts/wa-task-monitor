#!groovy

properties([
  // H allow predefined but random minute see https://en.wikipedia.org/wiki/Cron#Non-standard_characters
  pipelineTriggers([cron('H 08 * * 1-5')]),
  parameters([
    string(name: 'URL_TO_TEST', defaultValue: 'http://wa-task-monitor-aat.service.core-compute-aat.internal', description: 'The URL you want to run these tests against'),
    string(name: 'SecurityRules',
      defaultValue: 'https://raw.githubusercontent.com/hmcts/security-test-rules/master/conf/security-rules.conf',
      description: 'The URL you want to run these tests against'),
  ])
])

@Library("Infrastructure")

def type = "java"
def product = "wa"
def component = "task-monitor"

def secrets = [
  'wa-${env}' : [
    secret('idam-redirect-uri', 'IA_IDAM_REDIRECT_URI'),
    secret('idam-secret', 'IA_IDAM_SECRET'),

    secret('wa-idam-client-secret', 'WA_IDAM_CLIENT_SECRET'),

    secret('wa-test-law-firm-a-username', 'TEST_WA_LAW_FIRM_USERNAME'),
    secret('wa-test-law-firm-a-password', 'TEST_WA_LAW_FIRM_PASSWORD'),
    secret('wa-system-username', 'WA_SYSTEM_USERNAME'),
    secret('wa-system-password', 'WA_SYSTEM_PASSWORD'),
    secret('generic-docker-pact-broker-password', 'GENERIC_DOCKER_PACT_BROKER_YAML_PASS'),

  ],
  's2s-${env}': [
    secret('microservicekey-wa-task-monitor', 'S2S_SECRET_TASK_MONITOR'),
  ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [$class     : 'AzureKeyVaultSecret',
   secretType : 'Secret',
   name       : secretName,
   version    : '',
   envVariable: envVar
  ]
}

withNightlyPipeline(type, product, component) {
  env.TEST_URL = params.URL_TO_TEST
  env.Rules = params.SecurityRules
  env.S2S_URL = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
  env.IDAM_URL = "https://idam-api.aat.platform.hmcts.net"
  env.ROLE_ASSIGNMENT_URL = "http://am-role-assignment-service-aat.service.core-compute-aat.internal"
  env.DM_STORE_URL = "http://dm-store-aat.service.core-compute-aat.internal"
  env.CCD_URL = "http://ccd-data-store-api-aat.service.core-compute-aat.internal"
  env.CAMUNDA_URL = "http://camunda-api-aat.service.core-compute-aat.internal/engine-rest"
  env.WA_TASK_MANAGEMENT_API_URL = "http://wa-task-management-api-aat.service.core-compute-aat.internal"
  env.CONFIGURATION_CAMUNDA_MAX_RESULTS = 100
  env.CONFIGURATION_TIME_LIMIT_FLAG = true
  env.CONFIGURATION_TIME_LIMIT = 60
  env.INITIATION_CAMUNDA_MAX_RESULTS = 100
  env.INITIATION_TIME_LIMIT_FLAG = true
  env.INITIATION_TIME_LIMIT = 120
  env.TERMINATION_CAMUNDA_MAX_RESULTS = 100
  env.TERMINATION_TIME_LIMIT_FLAG = true
  env.TERMINATION_TIME_LIMIT = 120
  env.RECONFIGURATION_MAX_TIME_LIMIT_SECONDS = 120
  env.RECONFIGURATION_RETRY_WINDOW_TIME_HOURS= 2
  loadVaultSecrets(secrets)
  enableFortifyScan()
  enableMutationTest()
  enableFullFunctionalTest()
  enableSlackNotifications('#wa-build')

  after('fortify-scan') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/Fortify Scan/**/*'
  }
}
